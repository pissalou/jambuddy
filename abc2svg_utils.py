from pugixml import pugi
import verovio

tk = verovio.toolkit()
tk.setScale(100)  # in percentage


def abc2svg(abc: str) -> bytes:
    """TODO: timesig, defaultduration, key """
    tk.loadData(f"""X:1
T:ABC generated by file
M:4/4
L:1/4
K:C
{abc}|]""")  # multiline string needs to be non-indented
    tk.getPageCount()
    svg_string = tk.renderToSVG(1)
    doc = pugi.XMLDocument()
    result = doc.load_string(svg_string)
    # TODO if result.STATUS_OK
    # _add_css
    css = doc.select_node("/svg/style").node().text().get()
    css += ' .active{ fill:red; stroke: red;}'
    doc.select_node("/svg/style").node().text().set(css)
    # _write_to_bytes
    xml_writer = pugi.BytesWriter()
    doc.save(writer=xml_writer, flags=pugi.FORMAT_RAW, encoding=pugi.ENCODING_UTF8)
    return xml_writer.getvalue()

